name: Build Portal
on: [ push, pull_request ]
jobs:
  build:
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[ci-build]')
    strategy:
      matrix:
        os: [ "linux", "darwin", "windows" ]
        arch: [ "amd64", "arm" ]
        exclude:
          - os: "darwin"
            arch: "arm"
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Golang
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Get dependencies
        run: |
          mkdir -p $GOPATH/bin
          export PATH=$PATH:$GOPATH/bin
      - name: Build Executable
        run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o ${{ format('portal_{0}_{1}{2}', matrix.os, matrix.arch, matrix.os == 'windows' && '.exe' || '') }} -ldflags="-s -w" -v .
      - name: Upload Executable
        env:
          HOST: ${{ secrets.HOST }}
          ADDRESS: ${{ secrets.ADDRESS }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $ADDRESS >> ~/.ssh/known_hosts
          ssh -i ~/.ssh/id_rsa $HOST mkdir -p /home/paroxity/portal_builds/$GITHUB_SHA
          scp -i ~/.ssh/id_rsa ${{ format('portal_{0}_{1}{2}', matrix.os, matrix.arch, matrix.os == 'windows' && '.exe' || '') }} $HOST:/home/paroxity/portal_builds/$GITHUB_SHA/${{ format('portal_{0}_{1}{2}', matrix.os, matrix.arch, matrix.os == 'windows' && '.exe' || '') }}